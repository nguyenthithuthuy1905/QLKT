// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLKT.Data;


#nullable disable

namespace QLKT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250322072552_AddIdentity")]
    partial class AddIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QLKT.Models.CamDoan", b =>
                {
                    b.Property<int>("MaCamDoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCamDoan"));

                    b.Property<TimeSpan>("GioThi")
                        .HasColumnType("time");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("MaPH")
                        .HasColumnType("int");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungCamDoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoiDungCamDoanMaNoiDung")
                        .HasColumnType("int");

                    b.HasKey("MaCamDoan");

                    b.HasIndex("MaPH");

                    b.HasIndex("MaSV");

                    b.HasIndex("NoiDungCamDoanMaNoiDung");

                    b.ToTable("CamDoans");
                });

            modelBuilder.Entity("QLKT.Models.GiangVien", b =>
                {
                    b.Property<int>("MaGV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGV"));

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaKhoa")
                        .HasColumnType("int");

                    b.HasKey("MaGV");

                    b.HasIndex("MaKhoa");

                    b.ToTable("GiangViens");
                });

            modelBuilder.Entity("QLKT.Models.Khoa", b =>
                {
                    b.Property<int>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoa"));

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("QLKT.Models.KyThi", b =>
                {
                    b.Property<int>("MaKyThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKyThi"));

                    b.Property<TimeSpan>("GioThi")
                        .HasColumnType("time");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int?>("MaPH")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKyThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiGianLamBai")
                        .HasColumnType("int");

                    b.HasKey("MaKyThi");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaPH");

                    b.ToTable("KyThis");
                });

            modelBuilder.Entity("QLKT.Models.LichThiSinhVien", b =>
                {
                    b.Property<int>("MaLichThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichThi"));

                    b.Property<TimeSpan>("GioThi")
                        .HasColumnType("time");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaPH")
                        .HasColumnType("int");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLichThi");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaPH");

                    b.HasIndex("MaSV");

                    b.ToTable("LichThiSinhViens");
                });

            modelBuilder.Entity("QLKT.Models.LoaiSuCo", b =>
                {
                    b.Property<int>("MaLoaiSuCo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiSuCo"));

                    b.Property<string>("TenLoaiSuCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiSuCo");

                    b.ToTable("LoaiSuCos");
                });

            modelBuilder.Entity("QLKT.Models.LoaiViPham", b =>
                {
                    b.Property<int>("MaViPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaViPham"));

                    b.Property<string>("LoaiViPhamThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaViPham");

                    b.ToTable("LoaiViPhams");
                });

            modelBuilder.Entity("QLKT.Models.MonHoc", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"));

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("QLKT.Models.NoiDungCamDoan", b =>
                {
                    b.Property<int>("MaNoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNoiDung"));

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNoiDung");

                    b.ToTable("NoiDungCamDoans");
                });

            modelBuilder.Entity("QLKT.Models.PhanCongCoiThi", b =>
                {
                    b.Property<int>("MaPhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanCong"));

                    b.Property<int>("MaGV")
                        .HasColumnType("int");

                    b.Property<int>("MaKyThi")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhanCong");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaKyThi");

                    b.ToTable("PhanCongCoiThis");
                });

            modelBuilder.Entity("QLKT.Models.PhongThi", b =>
                {
                    b.Property<int>("MaPH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPH"));

                    b.Property<int>("SoLuongThiSinh")
                        .HasColumnType("int");

                    b.Property<string>("TenPH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPH");

                    b.ToTable("PhongThis");
                });

            modelBuilder.Entity("QLKT.Models.SinhVien", b =>
                {
                    b.Property<string>("MASV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChuyenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoaiBaoTinGap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoLot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenCha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NienKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoCMND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MASV");

                    b.HasIndex("MaKhoa");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("QLKT.Models.SuCoBatThuong", b =>
                {
                    b.Property<int>("MaSuCo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSuCo"));

                    b.Property<TimeSpan>("GioThi")
                        .HasColumnType("time");

                    b.Property<string>("HuongXuLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKyThi")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiSuCo")
                        .HasColumnType("int");

                    b.Property<int?>("MaPH")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiLapBB1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiLapBB2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiLapBB3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungSuCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSuCo");

                    b.HasIndex("MaKyThi");

                    b.HasIndex("MaLoaiSuCo");

                    b.HasIndex("MaPH");

                    b.ToTable("SuCoBatThuongs");
                });

            modelBuilder.Entity("QLKT.Models.ViPhamQuyChe", b =>
                {
                    b.Property<int>("MaViPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaViPham"));

                    b.Property<TimeSpan>("GioThi")
                        .HasColumnType("time");

                    b.Property<int>("MaLoaiViPham")
                        .HasColumnType("int");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaPH")
                        .HasColumnType("int");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungViPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaViPham");

                    b.HasIndex("MaLoaiViPham");

                    b.HasIndex("MaPH");

                    b.HasIndex("MaSV");

                    b.ToTable("ViPhamQuyChes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QLKT.Models.CamDoan", b =>
                {
                    b.HasOne("QLKT.Models.PhongThi", "PhongThi")
                        .WithMany()
                        .HasForeignKey("MaPH");

                    b.HasOne("QLKT.Models.SinhVien", "SinhVien")
                        .WithMany("CamDoans")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.NoiDungCamDoan", null)
                        .WithMany("CamDoans")
                        .HasForeignKey("NoiDungCamDoanMaNoiDung");

                    b.Navigation("PhongThi");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLKT.Models.GiangVien", b =>
                {
                    b.HasOne("QLKT.Models.Khoa", "Khoa")
                        .WithMany("GiangViens")
                        .HasForeignKey("MaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QLKT.Models.KyThi", b =>
                {
                    b.HasOne("QLKT.Models.MonHoc", "MonHoc")
                        .WithMany("KyThis")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.PhongThi", "PhongThi")
                        .WithMany("KyThis")
                        .HasForeignKey("MaPH");

                    b.Navigation("MonHoc");

                    b.Navigation("PhongThi");
                });

            modelBuilder.Entity("QLKT.Models.LichThiSinhVien", b =>
                {
                    b.HasOne("QLKT.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.PhongThi", "PhongThi")
                        .WithMany()
                        .HasForeignKey("MaPH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.SinhVien", "SinhVien")
                        .WithMany("LichThiSinhViens")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");

                    b.Navigation("PhongThi");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLKT.Models.PhanCongCoiThi", b =>
                {
                    b.HasOne("QLKT.Models.GiangVien", "GiangVien")
                        .WithMany("PhanCongCoiThis")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.KyThi", "KyThi")
                        .WithMany("PhanCongCoiThis")
                        .HasForeignKey("MaKyThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("KyThi");
                });

            modelBuilder.Entity("QLKT.Models.SinhVien", b =>
                {
                    b.HasOne("QLKT.Models.Khoa", "Khoa")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QLKT.Models.SuCoBatThuong", b =>
                {
                    b.HasOne("QLKT.Models.KyThi", "KyThi")
                        .WithMany("SuCoBatThuongs")
                        .HasForeignKey("MaKyThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.LoaiSuCo", "LoaiSuCo")
                        .WithMany("SuCoBatThuongs")
                        .HasForeignKey("MaLoaiSuCo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.PhongThi", "PhongThi")
                        .WithMany()
                        .HasForeignKey("MaPH");

                    b.Navigation("KyThi");

                    b.Navigation("LoaiSuCo");

                    b.Navigation("PhongThi");
                });

            modelBuilder.Entity("QLKT.Models.ViPhamQuyChe", b =>
                {
                    b.HasOne("QLKT.Models.LoaiViPham", "LoaiViPham")
                        .WithMany("ViPhamQuyChes")
                        .HasForeignKey("MaLoaiViPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLKT.Models.PhongThi", "PhongThi")
                        .WithMany()
                        .HasForeignKey("MaPH");

                    b.HasOne("QLKT.Models.SinhVien", "SinhVien")
                        .WithMany("ViPhamQuyChes")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiViPham");

                    b.Navigation("PhongThi");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLKT.Models.GiangVien", b =>
                {
                    b.Navigation("PhanCongCoiThis");
                });

            modelBuilder.Entity("QLKT.Models.Khoa", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("QLKT.Models.KyThi", b =>
                {
                    b.Navigation("PhanCongCoiThis");

                    b.Navigation("SuCoBatThuongs");
                });

            modelBuilder.Entity("QLKT.Models.LoaiSuCo", b =>
                {
                    b.Navigation("SuCoBatThuongs");
                });

            modelBuilder.Entity("QLKT.Models.LoaiViPham", b =>
                {
                    b.Navigation("ViPhamQuyChes");
                });

            modelBuilder.Entity("QLKT.Models.MonHoc", b =>
                {
                    b.Navigation("KyThis");
                });

            modelBuilder.Entity("QLKT.Models.NoiDungCamDoan", b =>
                {
                    b.Navigation("CamDoans");
                });

            modelBuilder.Entity("QLKT.Models.PhongThi", b =>
                {
                    b.Navigation("KyThis");
                });

            modelBuilder.Entity("QLKT.Models.SinhVien", b =>
                {
                    b.Navigation("CamDoans");

                    b.Navigation("LichThiSinhViens");

                    b.Navigation("ViPhamQuyChes");
                });
#pragma warning restore 612, 618
        }
    }
}
